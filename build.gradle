plugins {
    id 'maven-publish'
    alias libs.plugins.quilt.loom
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    mavenCentral()
}

dependencies {
    minecraft libs.minecraft
    mappings(loom.officialMojangMappings())
    modImplementation libs.quilt.loader

    modImplementation libs.quilted.fabric.api

    modImplementation include("maven.modrinth:forge-config-api-port:v5.0.4-1.19.3-Fabric")

    implementation "com.electronwill.night-config:core:3.6.5"
    implementation "com.electronwill.night-config:toml:3.6.5"
}

processResources {
    inputs.property 'version', version

    filesMatching('quilt.mod.json') {
        expand "version": version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
    // withJavadocJar()
}

jar {
    filesMatching('LICENSE') {
        rename '^(LICENSE.*?)(\\..*)?$', "\$1_${archivesBaseName}\$2"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}

loom {
    accessWidenerPath = file("src/main/resources/lightmeals.accesswidener")
}
